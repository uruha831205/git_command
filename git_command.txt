git init : 在當前資料夾底下建立一個.git 資料夾，紀錄以下在當前資料夾產生的 git 指令結果

git add . : 將當前資料夾底下的所有檔案加入預備 作存檔紀錄 和 上傳至 github

git status : 查看有哪些檔案已被或還沒被 (git add .) 的

git commit -m "自訂訊息" : 紀錄存檔紀錄和為這個存檔紀錄命名往後比較好了解

git log --oneline -5 : 查看最近幾次的提交紀錄

git reset --soft <commit 的 代碼> : commit指針指向該commit，本地端程式碼並不會"返回"成該commit 版本的程式碼及檔案數目，
                                    但可讓目前的螢幕上程式碼及程式再創新一個commit

git reset --hard <commit 的 代碼> : commit指針指向該commit，並將本地端程式碼"返回"成該commit 版本的程式碼及檔案數目

git reflog : 查看過往刪除的存檔紀錄
查看到要返回的commit ID 執行 : git reset <commit ID>

git remote add origin https://github.com/uruha831205/git_command.git : 建立 github 遠端連線，名為 origin((可自訂名稱))

git remote -v : 查看目前有多少個遠端連線

git remote remove origin : 刪除該遠端連線

git branch new-branch-name : 創建一個分支

git branch -M "main" : 強制重新命名當前的分支

git branch -m <old branch name> <new branch name> : 指定 branch 改名

git branch -a : 查看所有分支

git branch -d <branch-name> : 刪除分支，如果該分支還有尚未合併的變更，Git 會警告你，並阻止刪除。

git branch -D <branch-name> : 強制刪除分支。

git push origin --delete <branch-name> : 刪除遠端分支，請確保你沒有在使用該分支。

git checkout new-branch-name : 切換到分支

!! master : 系統預設創建的主要支線 !!

git push -u origin(git遠端連線) master(分支) : 將當前資料夾下的檔案上傳至 指定 github

git pull : 將指定 github 下載至當料夾

git clone https://github.com/uruha831205/git_command.git : 複製指定 github 的檔案至當下資料夾((這個通常是別人帳號底下的))

~
PS. 若git add . 出現錯誤 : warning: in the working copy of 'git_command.txt', CRLF will be replaced by LF the next time Git touches it
使用指令可排除 : git config --global core.autocrlf true